@model ViewModels.HotelViewModel
@{
    ViewBag.Title = "Delete";
}
<html>
<head>
    <title>
        Edit Sight Seen
    </title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.3.0/knockout-min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
</head>
<style>
    html {
        height: 100%;
    }

    body {
        height: 100%;
    }

    .global-container {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f5f5f5;
    }

    table {
        padding-top: 10px;
        font-size: 14px;
        margin-top: 30px;
    }

    .card-title {
        font-weight: 300;
    }

    .btn {
        font-size: 14px;
        margin-top: 20px;
    }

    .login-form {
        width: 330px;
        margin: 20px;
    }

    .sign-up {
        text-align: center;
        padding: 20px 0 0;
    }

    .alert {
        margin-bottom: -30px;
        font-size: 13px;
        margin-top: 20px;
    }
</style>
<body>
    <div class="pt-3">
        <div class="global-container">
            <div class="card login-form">
                <div class="card-body">
                    <h3 class="card-title text-center">Edit Sight Seen </h3>
                    @using (Html.BeginForm())
                    {
                        <div class="card-text">
                            <form>
                                <div class="form-group">
                                    <label for="name">SightSeen Name </label>
                                    <input type="text" class="form-control form-control-sm" id="SightseenName" aria-describedby="name" data-bind="value:SightseenName">
                                </div>
                                <div class="form-group">
                                    <label for="address1">Enter SightSeen Description </label>
                                    <textarea rows="2" cols="50" data-bind="textInput:Description"></textarea>
                                </div>
                                <div>
                                    <label for="city">Select City</label>
                                    <select data-bind="options: cityCollection, optionsCaption: 'Choose city...',
        optionsValue: function (item) { return item.id; },
        optionsText: function (item) { return item.name; }, value: CityId,
        valueUpdate: 'change'" id="City" name="City"></select>
                                </div>
                                <input type="button" class="btn btn-primary btn-block" data-bind="click:editSightSeen" value="Submit" />

                                <div class="sign-up">
                                    Don't have an account? <a href="#"> Create One </a>
                                </div>
                            </form>
                        </div>
                    }
                    <script type="text/javascript">
                        var selectedSightSeen = '@Html.Raw(ViewBag.selectedSightSeen)';
                    </script>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    var parsedselectedSightSeen = $.parseJSON('@Html.Raw(ViewBag.selectedSightSeen)');
    $(function () {
        ko.applyBindings(modelEdit);
    });
    
    var modelEdit = {
        cityCollection: ko.observableArray(parsedselectedSightSeen.cities),
        SightseenName: ko.observable(parsedselectedSightSeen.sightseenName),
        Description: ko.observable(parsedselectedSightSeen.description),
        Name: ko.observable(parsedselectedSightSeen.name),
        CityId: ko.observable(parsedselectedSightSeen.cityId),
        Id: ko.observable(parsedselectedSightSeen.id),
        editSightSeen: function () {
            var sightseenViewModel = {
                CityId: this.CityId(),
                SightseenName: this.SightseenName(),
                Description: this.Description(),
                Id:this.Id(),
            };
            //alert(sightseenViewModel);
            try {
                $.ajax({
                    url: '/Tour/EditSightSeen',
                    type: 'POST',
                    data: sightseenViewModel,
                    dataType: 'json',
                    //contentType: 'application/json',
                    success: function (data) {
                        if (data.isError == false)
                            window.location.href = data.redirectUrl;
                        else {
                            alert("Something went wrong when you delete hotel");
                        }
                    },
                    error: function () {
                        alert("Something went wrong when you delete hotel");
                    }
                });
            }
            catch (e) {
                window.location.href ="/Hotel/ListofHotels/"
            }
        }
    };
    //$(parsedselectedSightSeen.city).each(function (index, element) {
    //    modelEdit.cityCollection.push(element);
    //});
    function successCallback(data) {
        window.location.href = '/Hotel/Index/';
    }

    function errorCallback(err) {
        window.location.href = '/Home/Index/';
    }
    //$("#City").change(function () {
    //    debugger;
    //    //var stateId = $("#State").val();
    //    //stateId = parseInt(stateId);
    //    //if (stateId > 0) {
    //    $.ajax({
    //        type: "GET",
    //        url: "/Tour/GetCities",
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        success: function (response) {
    //            debugger;
    //            if (response != "") {
    //                $(response).each(function (index, element) {
    //                    modelEdit.cityCollection.push(element);
    //                });
    //                //var element = $('#hotelform')[0];
    //                //ko.cleanNode(element);
    //                //  ko.cleanNode(document.getElementById("#hotelform"));
    //                //ko.cleanNode(hotelCreate);
    //                //ko.applyBindings(hotelCreate);
    //            }
    //        }
    //    });
    //    //}

    //});
</script>

